---
- name: Check if UDS file exists
  stat:
    path: "/opt/splunkforwarder/var/run/splunk/cli.socket"
  register: socket_file

- name: UDS flag check
  debug:
    msg: "UDS is marked as enabled, but cli.socket file is missing or empty"
  when:
    - splunk.splunk_http_enabled|bool == false
    - not socket_file.stat.exists or (socket_file.stat.exists and socket_file.stat.size == 0)

- name: "Retrieve Splunk version"
  command: "{{ splunk.exec }} version --accept-license --answer-yes --no-prompt"
  register: installed_splunk_version
  become: yes
  become_user: "{{ splunk.user }}"

- name: "Set installed version fact"
  set_fact:
    installed_splunk_version: "{{ installed_splunk_version.stdout | regex_search(regexp, '\\1') }}"
  vars:
    regexp: 'Splunk(?:\sUniversal\sForwarder)?\s((\d+)\.(\d+)\.(\d+)).*'

- name: Configure to set Mgmt Mode as auto (Allows UDS)
  ini_file:
    dest: "{{ splunk.home }}/etc/system/local/server.conf"
    option: "mgmtMode"
    section: "httpServer"
    value: "auto"
    owner: "{{ splunk.user }}"
    group: "{{ splunk.group }}"
  when:
    - splunk.role == "splunk_universal_forwarder"
    - socket_file.stat.exists
    - socket_file.stat.size > 0
    - installed_splunk_version[0] is version("9.1.0", ">=")

- name: Configure to set Mgmt Mode as tcp (Allows only TCP)
  ini_file:
    dest: "{{ splunk.home }}/etc/system/local/server.conf"
    option: "mgmtMode"
    section: "httpServer"
    value: "tcp"
    owner: "{{ splunk.user }}"
    group: "{{ splunk.group }}"
  when:
    - splunk.role == "splunk_universal_forwarder"
    - not socket_file.stat.exists or (socket_file.stat.exists and socket_file.stat.size == 0)
    - installed_splunk_version[0] is version("9.1.0", ">=")
