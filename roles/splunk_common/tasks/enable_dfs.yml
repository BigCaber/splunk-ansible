---
- name: Enable DFS featre in server.conf
  uri:
    url: "{{ cert_prefix }}://127.0.0.1:{{ splunk.svc_port }}/servicesNS/nobody/system/configs/conf-server/dfs"
    method: POST
    user: "{{ splunk.admin_user }}"
    password: "{{ splunk.password }}"
    validate_certs: false
    body: "disabled=false&port={{splunk.dfs.port}}&spark_master_host={{splunk.dfs.spark_master_host}}&spark_master_webui_port={{splunk.dfs.spark_master_webui_port}}"
    headers:
      Content-Type: "application/x-www-form-urlencoded"
    status_code: 200
    timeout: 10
  register: dfs_enable_result
  changed_when: dfs_enable_result.status == 200

- name: Update DFS settings in limits.conf
  uri:
    url: "{{ cert_prefix }}://127.0.0.1:{{ splunk.svc_port }}/servicesNS/nobody/system/configs/conf-limits/dfs"
    method: POST
    user: "{{ splunk.admin_user }}"
    password: "{{ splunk.password }}"
    validate_certs: false
    body: "dfc_num_slots={{splunk.dfs.dfc_num_slots}}&dfw_num_slots={{splunk.dfs.dfw_num_slots}}&dfw_num_slots_enabled={{splunk.dfs.dfw_num_slots_enabled}}"
    headers:
      Content-Type: "application/x-www-form-urlencoded"
    status_code: 200
    timeout: 10
  register: dfs_limits_result
  changed_when: dfs_limits_result.status == 200

- name: Set JAVA_HOME in splunk-launch.conf
  become: yes
  become_user: "{{ splunk.user }}"
  lineinfile:
    path: "{{splunk.home}}/etc/splunk-launch.conf"
    regexp: '^JAVA_HOME'
    line: "JAVA_HOME={{ lookup('env', 'JAVA_HOME') }}"
  notify:
    - Restart the splunkd service

- name: Set SPARK_HOME in splunk-launch.conf
  become: yes
  become_user: "{{ splunk.user }}"
  lineinfile:
    path: "{{splunk.home}}/etc/splunk-launch.conf"
    regexp: '^SPARK_HOME'
    line: "SPARK_HOME={{ lookup('env', 'SPARK_HOME')  }}"
  notify:
    - Restart the splunkd service
